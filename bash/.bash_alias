#!/usr/bin/env bash

try_calendar() {
	[[ -f $(which calendar 2>/dev/null) ]] || return
	[[ -f ~/.calendar/calendar ]] || return

	lastreadfile=~/.calendar/last-read
	lastread=$(cat ${lastreadfile} 2>/dev/null)

	# Continue only if stored date doesn't match actual date
	[[ ${lastread} == $(date --iso-8601) ]] && return

	output=$(calendar)

	# If there's nothing in the calendar output for today, do nothing
	[[ -n ${output} ]] || return

	echo "${output}"
	echo "Disable calendar output for today with \`cal-viewed\`"
}

cal-viewed() {
	date --iso-8601 > ~/.calendar/last-read
}

# Download and embed as much as we can
_ytdl() {
	yt-dlp --write-description --write-info-json --write-annotations \
	  --write-sub --all-subs --convert-subs srt --embed-subs \
	  --add-metadata --write-thumbnail --embed-thumbnail \
	  --merge-output-format mkv \
	  $@
}

# Sanitize title for filesystem
_ytdl_safe() {
	_ytdl --output "%(stitle)s.%(ext)s" $@
}

# Proxy _ytdl through local Tor server
_tor_ytdl() {
	_ytdl --proxy "socks5://127.0.0.1:9050" $@
}

# Both of the previous
_tor_ytdl_safe() {
	_ytdl_safe --proxy "socks5://127.0.0.1:9050" $@
}

base16() {
	if ! [ -t 0]; then
		read input
	else
		input=$1
	fi

	echo "ibase=10;obase=16;${1}" | bc
}

strlen() {
	if ! [ -t 0 ]; then
		read input
	else
		input=$1
	fi

	echo ${#input}
}

stopwatch() {
	date1=`date +%s`;
	while true; do
		echo -ne "$(date -u --date @$((`date +%s` - $date1)) +%H:%M:%S)\r";
	done
}

eedit() {
	file=$(equery w -m $1)

	# equery stdout should be empty in case of an error
	[[ ${file} ]] || return

	$EDITOR $(equery w -m $1)
}

urlview() {
	if [[ $1 == *//dpaste.com/* && $1 != *.txt ]]; then
		url=$(echo $1 | sed 's/$/.txt/')
	elif [[ $1 == *//bpaste.com/* && $1 != *raw* ]]; then
		url=$(echo $1 | sed 's/.com/.com\/raw/')
	elif [[ $1 == *//pastebin.com/* && $1 != *raw* ]]; then
		url=$(echo $1 | sed 's/.com\//.com\/raw\//')
	elif [[ $1 == *//paste.debian.net/* && $1 != *plain* ]]; then
		url=$(echo $1 | sed 's/.net\//.net\/plain\//')
	elif [[ $1 == *//paste.ubuntu.com/p/* && $1 != *plain* ]]; then
		url=$(echo $1 | sed 's/$/\/plain\//')
	elif [[ $1 == *//paste.centos.org/view/* && $1 != *plain* ]]; then
		url=$(echo $1 | sed 's/view\//view\/raw\//')
	elif [[ $1 == */bpa.st/* && $1 != *raw* ]]; then
		url=$(echo $1 | sed 's/bpa.st\//bpa.st\/raw\//')
	elif [[ $1 == *irccloud.com/* && $1 != *raw* ]]; then
		url=$(echo $1 | sed 's/pastebin\//pastebin\/raw\//')
	else
		url=$1
	fi

	curl -sSL "${url}"
}

cve-urls-open() {
	while read line; do
		firefox -new-tab $(echo ${line} | sed 's/.*<//g;s/>$//')
	done < <(xclip -o)
}

bscve() {
	for cve in $@; do
		output=$(bugz --columns 9999 --quiet search --alias "${cve}" -s all)
		if [[ -z "${output}" ]]; then
			echo "No bug for ${cve}"
		else
			echo "https://bugs.gentoo.org/${output}"
		fi
	done
}

cves() {
	while read line; do
		grep -o 'CVE-[0-9]\{4\}-[0-9]\{4,5\}' <(echo $line)
	done | sort -u | xargs | sed 's/ /, /g'
}

revdeps() {
	grep "" /var/lib/jake/gentoo/tooling/qa-scripts/depindex/*/"${1}" |
		sed 's/[^:]*://' | sort -u
}

qwhich() {
	qfile $(which $1)
}

bs() {
	bugz --columns 9999 -q search "${@}" | sed 's:^:https\://bugs.gentoo.org/:'
}

qr() {
	qrencode $1 -o - | feh -
}

randchars() {
    if [[ -z "${1}" ]]; then echo "Integer argument needed"; return; fi
    head /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w ${1} | head -n 1
}

venv() {
	[[ -n "${1}" ]] && "${1}" -m venv venv || python -m venv venv
	source venv/bin/activate
}

mkmbox() {
	local u=$(umask)
	umask 0077

	mkdir -p "${1}"/{cur,tmp,new}

	umask ${u}
}

git-allfiles() {
	#git log --pretty=format: --name-only --diff-filter=A -- "${1}" | sort -n
	#git log --pretty=format: --name-status -- "${1}" | cut -f2- | sort -un
	git log --pretty=format: --name-status -- "${1}" |  cut -f2- | sed 's/\s\+/\n/g' | sort -u
}

watchlatex() {
	/usr/bin/inotifywait -me modify $1 |
		while read path _ file; do
			/usr/bin/pdflatex $1 -halt-on-error; /usr/bin/pkill -HUP mupdf;
		done
}

mail-pmask() {
	local body pkg template
	body=$(git diff HEAD^ | grep '^+' | tail -n +2 | sed 's/^+//;/^$/d')
	pkg=$(echo "${body}" | tail -1)
	template=$(cat ~/.mutt/templates/last-rites | sed -e "s:Last rites\::Last rites\: ${pkg}:")
	mutt -H <(echo -e "${template}" "\n${body}") -e "source ~/.mutt/gentoo.muttrc"
}

maint() {
	git grep -l $1 '**/metadata.xml' | cut -d/ -f1-2
}

scanmaint() {
	pkgs=$(maint $1 | xargs)
	shift
	pkgcheck scan ${pkgs}
}

zmv() {
	zsh -c 'autoload zmv && zmv "$@"' zmv "$@"
}

_genpod_base() {
    nice -n 19 \
    ionice -c idle \
    podman run --cap-add=CAP_SYS_ADMIN,CAP_NET_ADMIN \
           --volume /var/lib/jake/gentoo/gentoo:/var/db/repos/gentoo \
           --volume /var/cache/distfiles:/var/cache/distfiles \
           --pull=newer\
           -it $@
}

alias ls='ls -v --color=always'
alias emacs='emacsclient -t'
alias ncmpcpp="ALL_PROXY='127.0.0.1:8118' ncmpcpp"
alias b='buku --suggest --np'
alias di='docker image'
alias dc='docker container'
alias dv='docker volume'
alias mail='mail -f /var/spool/mail/jake'
alias tmux='tmux -2'
alias git='git --no-pager'
alias mpv='mpv --no-audio-display'
alias beep='paplay --volume=32767 /usr/share/sounds/freedesktop/stereo/bell.oga'
alias pwndbg='pwndbg -ex init-pwndbg'

alias ytdl='_ytdl --output "%(title)s/%(title)s.%(ext)s"'
alias torytdl='_tor_ytdl --output "%(title)s/%(title)s.%(ext)s"'
alias torsytdl='_tor_ytdl_safe'

alias torcurl='curl -x socks5://127.0.0.1:9050'

alias urlencode='python3 -c "import sys, urllib.parse as ul; print(ul.unquote_plus(sys.argv[1]))"'
alias urldecode='python3 -c "import sys, urllib.parse as ul; print(ul.quote_plus(sys.argv[1]))"'

alias bsa='bs -s all'
alias bss='bs -a security@gentoo.org'
alias bssa='bs -a security@gentoo.org -s all'
alias bswr='bs -a bug-wranglers@gentoo.org'

alias gd='git diff'
alias gst='git status'
alias ga='git add'
alias gb='git branch'
alias gco='git checkout'
alias gc='git commit -v -sS'
alias 'gc!'='git commit -v -sS --amend'
alias gdca='git diff --cached'
alias glg='git log --grep'
alias grc='git rebase --continue'
alias gri='git rebase --interactive'
alias gra='git rebase --abort'
alias gl='git log'

alias pblame='pquery --blame'

alias ta='tmux attach'

alias mtr='mtr -t'

alias genpod='_genpod_base -e "PORTAGE_BINHOST=https://binhost.ajak.xyz/znver1/" gentoo/stage3:latest'
alias genpod_musl='_genpod_base gentoo/stage3:musl'

alias pass=gopass

eval "$(command repo-cd --bash=rcd --path="~/gentoo/gentoo:default:.")"
